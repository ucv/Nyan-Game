/**
 * Tout ce qui concerne les paramètres du comptes et les requêtes AJAX disponible.
 */
define([
	"src/game/server/ServerConfig"
],
function (
	ServerConfig
) {
	var Account = function () {
		this.name = "";
		this.password = "";
		this.progress = {};
	}


	/*
	 * Permet de ce connecter ou créer un compte.
	 * @name Nom de compte
	 * @password Mot de passe du compte
	 * Return "created" - Compte créer
	 *		  "connected" - Connexion réussi
	 *		  "wrongpassword" - Mot de passe incorrect ou compte déjà existant
	 */
	Account.prototype.connect = function (name, password) {
		this.name = name;
		this.password = password;
		var result;
		$.ajaxSetup({async:false});
		$.post(ServerConfig.host + "request.php", {
			name: this.name,
			password: this.password,
			isRequest: false
		}, function (data) {
			result = data;
		});
		$.ajaxSetup({async:true});
		return result;
	}


	/*
	 * Stock la progression du joueur dans l'attribut this.progress (score à chaque niveau, niveau débloqué, etc.)
	 */
	Account.prototype.getProgress = function () {
		$.ajaxSetup({async:false});
		$.post(ServerConfig.host + "request.php", {
			isRequest: true
		}, function (data) {
			console.log(data);
		});
		$.ajaxSetup({async:true});
	}


	/*
	 * Permet d'ajouter un score à la database.
	 * @level Niveau auquel correspond le score
	 * @score Score à ajouter
	 */
	Account.prototype.addScore = function (level, score) {
		$.post(ServerConfig.host + "request.php", {
			name: this.name,
			password: this.password,
            request: "sendScore",
            level: level,
            score: score,
			isRequest: true
		}, function (data) {
			//
		});
	}


	/*
	 * Récupère le score total du joueur.
	 * Return Score du joueur.
	 */
	Account.prototype.getScore = function () {
		var result;
		$.ajaxSetup({async:false});
		$.post(ServerConfig.host + "request.php", {
			name: this.name,
			password: this.password,
			request: "getBestScore",
			isRequest: true
		}, function (data) {
			data = JSON.parse(data);
			result = data;
		});
		$.ajaxSetup({async:true});
		return result;
	}


	/*
	 * Récupère le top 10 des joueurs.
	 * Return Objet du top 10
	 */
	Account.prototype.getBestScore = function () {
		var result;
		$.ajaxSetup({async:false});
		$.post(ServerConfig.host + "request.php", {
			name: this.name,
			password: this.password,
			request: "getBestScore",
			isRequest: true
		}, function (data) {
			data = JSON.parse(data);
			result = data;
		});
		$.ajaxSetup({async:true});
		return result;
	}


	return new Account();
});